PROCEDURE "MKTG_PLANNING_TOOL"."mktgplanningtool.db.procedures::GET_HL3_PATH_BY_USER_ID"(
		IN in_user_id BIGINT, 
		IN in_is_super_Admin TINYINT, 
		IN in_budget_year_id BIGINT, 
		IN in_region_id BIGINT, 
		IN in_subregion_id BIGINT, 
		OUT out_result TABLE (
			HL1_ID BIGINT,
			HL1_PATH NVARCHAR(100),
			HL3_ID BIGINT,
			HL3_PATH NVARCHAR(100),
			HL1_DESCRIPTION NVARCHAR(100),
			HL3_DESCRIPTION NVARCHAR(100),
			HL2_ID BIGINT,
			HL2_DESCRIPTION NVARCHAR(100),
			HL2_PATH NVARCHAR(100)
		)
	)
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER
	DEFAULT SCHEMA "MKTG_PLANNING_TOOL"
AS
BEGIN
	IF (in_is_super_Admin = 1) THEN
		var_out_result = SELECT HL1.HL1_ID, 
					HL1.ACRONYM AS hl1_acronym, 
					SUBSTRING(
						TO_NVARCHAR(BGY.BUDGET_YEAR), 
						3, 
						2
					) AS BUDGET_YEAR, 
					hl3.hl3_ID, 
					hl3.acronym AS hl3_acronym, 
					hl1.description AS HL1_DESCRIPTION, 
					hl3.hl3_description, 
					HL1.region_id AS REGION_ID, 
					HL2.HL2_ID, 
					HL2.ORGANIZATION_ACRONYM AS H2_ACRONYM, 
					HL2.ORGANIZATION_NAME AS HL2_DESCRIPTION
				FROM HL3 AS hl3
					INNER JOIN HL2 AS hl2
					ON hl2.hl2_id = hl3.hl2_id
						AND hl2.enabled = 1
						AND hl2.deleted = 0
					INNER JOIN HL1 AS hl1
					ON hl1.hl1_id = hl2.hl1_id
						AND hl1.enabled = 1
						AND hl1.deleted = 0
					INNER JOIN BUDGET_YEAR AS BGY
					ON hl1.budget_year_id = BGY.budget_year_id
						AND BGY.enabled = 1
						AND BGY.deleted = 0
					LEFT OUTER JOIN REGION AS R
					ON R.region_id = HL1.region_id
					LEFT OUTER JOIN SUBREGION AS SR
					ON SR.subregion_id = HL1.subregion_id
				WHERE hl3.enabled = 1
					AND hl3.deleted = 0
					AND (BGY.BUDGET_YEAR_ID = in_budget_year_id
						OR in_budget_year_id = 0)
					AND (SR.SUBREGION_ID = in_subregion_id
						OR in_subregion_id = 0)
				ORDER BY HL1.ACRONYM ASC, 
					BGY.BUDGET_YEAR ASC, 
					hl3.acronym ASC;
	ELSE
		var_out_result = SELECT HL1.HL1_ID, 
					HL1.ACRONYM AS hl1_acronym, 
					SUBSTRING(
						TO_NVARCHAR(BGY.BUDGET_YEAR), 
						3, 
						2
					) AS BUDGET_YEAR, 
					hl3.hl3_ID, 
					hl3.acronym AS hl3_acronym, 
					hl1.description AS HL1_DESCRIPTION, 
					hl3.hl3_description, 
					HL1.region_id AS REGION_ID, 
					HL2.HL2_ID, 
					HL2.ORGANIZATION_ACRONYM AS H2_ACRONYM, 
					HL2.ORGANIZATION_NAME AS HL2_DESCRIPTION
				FROM HL3 AS hl3
					INNER JOIN HL3_USER AS hl3User
					ON hl3.hl3_id = hl3User.hl3_id
						AND hl3User.USER_ID = in_user_id
					INNER JOIN HL2 AS hl2
					ON hl2.hl2_id = hl3.hl2_id
						AND hl2.enabled = 1
						AND hl2.deleted = 0
					INNER JOIN HL1 AS hl1
					ON hl1.hl1_id = hl2.hl1_id
						AND hl1.enabled = 1
						AND hl1.deleted = 0
					INNER JOIN BUDGET_YEAR AS BGY
					ON hl1.budget_year_id = BGY.budget_year_id
						AND BGY.enabled = 1
						AND BGY.deleted = 0
					LEFT OUTER JOIN REGION AS R
					ON R.region_id = HL1.region_id
					LEFT OUTER JOIN SUBREGION AS SR
					ON SR.subregion_id = HL1.subregion_id
				WHERE hl3.enabled = 1
					AND hl3.deleted = 0
					AND (BGY.BUDGET_YEAR_ID = in_budget_year_id
						OR in_budget_year_id = 0)
					AND (SR.SUBREGION_ID = in_subregion_id
						OR in_subregion_id = 0)
				ORDER BY HL1.ACRONYM ASC, 
					BGY.BUDGET_YEAR ASC, 
					hl3.acronym ASC;
	END IF;
	IF (in_region_id = -1) THEN
		out_result = SELECT T.HL1_ID, 
					CONCAT(
						T.hl1_acronym, 
						T.BUDGET_YEAR
					) AS HL1_PATH, 
					T.HL3_ID, 
					CONCAT(
						CONCAT(
							CONCAT(
								T.hl1_acronym, 
								T.BUDGET_YEAR
							), 
							'-'
						), 
						T.hl3_acronym
					) AS HL3_PATH, 
					T.HL1_DESCRIPTION, 
					T.HL3_DESCRIPTION, 
					T.HL2_ID, 
					T.HL2_DESCRIPTION, 
					CONCAT(
						CONCAT(
							CONCAT(
								T.hl1_acronym, 
								T.BUDGET_YEAR
							), 
							'-'
						), 
						T.H2_ACRONYM
					) AS HL2_PATH
				FROM :var_out_result AS T
				WHERE T.REGION_ID = 0;
	ELSE
		out_result = SELECT T.HL1_ID, 
					CONCAT(
						T.hl1_acronym, 
						T.BUDGET_YEAR
					) AS HL1_PATH, 
					T.HL3_ID, 
					CONCAT(
						CONCAT(
							CONCAT(
								T.hl1_acronym, 
								T.BUDGET_YEAR
							), 
							'-'
						), 
						T.hl3_acronym
					) AS HL3_PATH, 
					T.HL1_DESCRIPTION, 
					T.HL3_DESCRIPTION, 
					T.HL2_ID, 
					T.HL2_DESCRIPTION, 
					CONCAT(
						CONCAT(
							CONCAT(
								T.hl1_acronym, 
								T.BUDGET_YEAR
							), 
							'-'
						), 
						T.H2_ACRONYM
					) AS HL2_PATH
				FROM :var_out_result AS T
				WHERE T.REGION_ID = in_region_id
					OR in_region_id = 0;
	END IF;
END;
