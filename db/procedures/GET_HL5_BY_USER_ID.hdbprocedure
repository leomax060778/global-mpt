PROCEDURE "MKTG_PLANNING_TOOL"."mktgplanningtool.db.procedures::GET_HL5_BY_USER_ID" (
        IN in_user_id BIGINT,
        IN in_issa BIGINT,
        OUT out_result TABLE(
             HL4_ID BIGINT
            , HL4_PATH NVARCHAR(255)
            , PARENT_STATUS_ID INTEGER
            , HL5_ID BIGINT
            , HL5_ACRONYM NVARCHAR(255)
            , STATUS_DETAIL NVARCHAR(255)
            , STATUS_DETAIL_ID integer
            , CREATED_BY NVARCHAR(255)
            , HL5_BUDGET DECIMAL(19,6)
            , TOTAL_HL6 INT
            --, QUANTITY_HL6_OUT_BUDGET INT
            --, ALLOCATED DECIMAL(19,2)
            --, REMAINING DECIMAL(19,2)
            , IMPORTED tinyint
            , CRM_DESCRIPTION NVARCHAR(255)
            , IN_CRM_CHILD integer
        )
)
LANGUAGE SQLSCRIPT
SQL SECURITY INVOKER
DEFAULT SCHEMA "MKTG_PLANNING_TOOL"
AS
BEGIN

va_intermidate = SELECT
        hl5.hl5_ID AS HL5_ID
        , hl5.acronym AS HL5_ACRONYM
        , hl4.hl4_id
        , hl5_status_detail.detail AS STATUS_DETAIL
        , CONCAT(CONCAT(userTable.FIRST_NAME, ' '),userTable.LAST_NAME) AS CREATED_BY
        , hl5.BUDGET AS HL5_BUDGET
        , HL5.IMPORTED as IMPORTED
        , HL5.HL5_CRM_DESCRIPTION AS CRM_DESCRIPTION
        , hl5.hl5_status_detail_id
        , hl3.hl3_id
        , hl4.ACRONYM
        , hl4.HL4_STATUS_DETAIL_ID AS PARENT_STATUS_ID
    FROM HL5 Hl5
        INNER JOIN HL4 hl4
            ON hl4.hl4_id=hl5.hl4_id AND hl4.enabled=1 AND hl4.deleted=0
        INNER JOIN hl5_status_detail hl5_status_detail
            ON hl5_status_detail.hl5_status_detail_id = hl5.hl5_status_detail_id
        INNER JOIN USER userTable
            ON userTable.USER_ID = hl5.created_user_id
        INNER JOIN HL3
            ON HL4.hl3_id = HL3.hl3_id
    WHERE hl5.enabled=1
        AND hl5.deleted=0
        AND hl5.created_user_id = in_user_id;

aux_out_result = SELECT DISTINCT
        va_hl5.HL5_ID
		, va_hl5.HL5_ACRONYM
		, va_hl5.HL4_ID
		, va_hl5.STATUS_DETAIL
		, va_hl5.CREATED_BY
		, va_hl5.HL5_BUDGET
		, va_hl5.CRM_DESCRIPTION
		, COUNT(DISTINCT HL6.HL6_ID) AS TOTAL_HL6
		, SUM(CASE WHEN (hl6.HL6_STATUS_DETAIL_ID = 2 OR hl6.HL6_STATUS_DETAIL_ID = 3 OR hl6.HL6_STATUS_DETAIL_ID = 4) THEN 1 ELSE 0 END) AS IN_CRM_CHILD
        , va_hl5.IMPORTED
        , va_hl5.hl3_id
        , va_hl5.ACRONYM
        , va_hl5.HL5_STATUS_DETAIL_ID
        , va_hl5.PARENT_STATUS_ID
    FROM :va_intermidate va_hl5
        LEFT JOIN HL6 hl6
            ON hl6.HL5_ID = va_hl5.hl5_id AND hl6.enabled = 1 AND hl6.deleted = 0
        --- This means that will be included those records that arenÂ´t in Deleted In CRM ---
                	  AND HL6.HL6_STATUS_DETAIL_ID != 10

	GROUP BY
        va_hl5.HL5_ID
        , va_hl5.HL5_ACRONYM
        , va_hl5.HL4_ID
        , va_hl5.STATUS_DETAIL
        , va_hl5.CREATED_BY
        , va_hl5.HL5_BUDGET
        , va_hl5.IMPORTED
        , va_hl5.CRM_DESCRIPTION
        , va_hl5.hl3_id
        , va_hl5.ACRONYM
        , va_hl5.HL5_STATUS_DETAIL_ID
        , va_hl5.PARENT_STATUS_ID;

temp_l4_result =
    select hl4.hl4_id
        , "MKTG_PLANNING_TOOL"."mktgplanningtool.db.functions::GET_CRM_ID"(BGY.BUDGET_YEAR, hl1.acronym, hl2.ORGANIZATION_ACRONYM, hl3.acronym, hl4.acronym, '', '') AS HL4_PATH
    from :aux_out_result hl4
        INNER JOIN HL3 hl3
            ON hl3.hl3_id=hl4.hl3_id AND hl3.enabled = 1 AND hl3.deleted = 0
        INNER JOIN HL2 hl2
            ON hl2.hl2_id = hl3.hl2_id AND hl2.enabled = 1 AND hl2.deleted = 0
        INNER JOIN HL1 hl1
            ON hl1.hl1_id = hl2.hl1_id AND hl1.enabled = 1 AND hl1.deleted = 0
        INNER JOIN BUDGET_YEAR BGY
            ON hl1.budget_year_id = BGY.budget_year_id AND BGY.enabled = 1 AND BGY.deleted = 0;

out_result =
    select DISTINCT
          T2.HL4_ID
        , T2.HL4_PATH
        , T.PARENT_STATUS_ID
        , T.HL5_ID
        , T.HL5_ACRONYM
        , T.STATUS_DETAIL
        , T.HL5_STATUS_DETAIL_ID AS STATUS_DETAIL_ID
        , T.CREATED_BY
        , T.HL5_BUDGET
        , T.TOTAL_HL6
        , T.IMPORTED
        , T.CRM_DESCRIPTION
        ,T.IN_CRM_CHILD
 from :temp_l4_result T2
        inner join :aux_out_result T on T2.HL4_ID = T.HL4_ID

 ORDER BY T2.HL4_PATH ASC, T.HL5_ACRONYM ASC;

END;
