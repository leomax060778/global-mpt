PROCEDURE "MKTG_PLANNING_TOOL"."mktgplanningtool.db.procedures::GET_ALL_EVENT_REQUEST" (
    IN in_user_id BIGINT,
    IN in_isSa TINYINT,
	out out_result table (
	    EVENT_REQUEST_ID integer,
	    EVENT_REQUEST_STATUS_ID integer,
	    STATUS_NAME NVARCHAR(255),
    	HL4_ID INTEGER,
    	NAME NVARCHAR(255),
        START_DATE NVARCHAR(32),
        HL4_CRM_ID NVARCHAR(255),
    	HL5_ID INTEGER,
    	END_DATE NVARCHAR(32),
    	CITY NVARCHAR(255),
    	COUNTRY_ID INTEGER,
    	COUNTRY_NAME NVARCHAR(255),
    	VENUE NVARCHAR(255),
    	EVENT_OWNER NVARCHAR(255),
    	OBJECTIVE_ID INTEGER,
    	OBJECTIVE_NAME NVARCHAR(255),
    	CAMPAIGN_TYPE_ID INTEGER,
    	CAMPAIGN_TYPE_NAME NVARCHAR(255),
    	CAMPAIGN_SUB_TYPE_ID INTEGER,
    	CAMPAIGN_SUB_TYPE_NAME NVARCHAR(255),
    	DES_TYPE_ID INTEGER,
    	DES_TYPE_NAME NVARCHAR(255),
    	SUMMARY NVARCHAR(255),
    	PARTICIPANTS_NUMBER INTEGER,
    	EXISTING_CUSTOMERS_PERCENTAGE INTEGER,
    	COST DECIMAL(19,2),
    	PARTNER_REVENUE DECIMAL(19,2),
    	MNP_VALUE DECIMAL(19,2),
    	MNP_VOLUME INTEGER,
    	ENABLE_L5_DELETION TINYINT,
    	IS_EVENT_APPROVER TINYINT
	))
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER
	DEFAULT SCHEMA "MKTG_PLANNING_TOOL"
	READS SQL DATA AS
BEGIN

		out_result =
		SELECT
        ER.EVENT_REQUEST_ID
        ,ER.EVENT_REQUEST_STATUS_ID
        ,ERS.NAME AS STATUS_NAME
        ,ER.HL4_ID
        ,ER.NAME
        , TO_NVARCHAR(ER.START_DATE, 'MM/DD/YYYY') AS START_DATE
        ,"MKTG_PLANNING_TOOL"."mktgplanningtool.db.functions::GET_CRM_ID"(BGY.BUDGET_YEAR, HL1.acronym, hl2.ORGANIZATION_ACRONYM, HL3.acronym, hl4.acronym, '', '') AS HL4_CRM_ID
        ,ER.HL5_ID
        , TO_NVARCHAR(ER.END_DATE, 'MM/DD/YYYY') AS END_DATE
        ,ER.CITY
        ,ER.COUNTRY_ID
        ,C.NAME as COUNTRY_NAME
        ,ER.VENUE
        ,ER.EVENT_OWNER
        ,ER.OBJECTIVE_ID
        ,O.NAME AS OBJECTIVE_NAME
        ,ER.CAMPAIGN_TYPE_ID
        ,CT.NAME AS CAMPAIGN_TYPE_NAME
        ,ER.CAMPAIGN_SUB_TYPE_ID
        ,CST.NAME AS CAMPAIGN_SUB_TYPE_NAME
        ,ER.DES_TYPE_ID
        ,DES_TYPE.NAME AS DES_TYPE_NAME
        ,ER.SUMMARY
        ,ER.PARTICIPANTS_NUMBER
        ,ER.EXISTING_CUSTOMERS_PERCENTAGE
        ,ER.COST
        ,ER.PARTNER_REVENUE
        ,ER.MNP_VALUE
        ,ER.MNP_VOLUME
        ,(CASE WHEN HL5.HL5_STATUS_DETAIL_ID = 3 THEN 0 ELSE 1 END) AS ENABLE_L5_DELETION
        ,(CASE WHEN HL2_EA.HL2_ID IS NULL AND HL3_EA.HL3_ID IS NULL THEN 0 ELSE 1 END) AS IS_EVENT_APPROVER
        FROM EVENT_REQUEST ER
        INNER JOIN EVENT_REQUEST_STATUS ERS ON ERS.EVENT_REQUEST_STATUS_ID = ER.EVENT_REQUEST_STATUS_ID
        LEFT JOIN COUNTRY C ON C.COUNTRY_ID = ER.COUNTRY_ID
        LEFT JOIN DES_TYPE DES_TYPE ON DES_TYPE.DES_TYPE_ID = ER.DES_TYPE_ID
        INNER JOIN OBJECTIVE O ON O.OBJECTIVE_ID = ER.OBJECTIVE_ID
        INNER JOIN CAMPAIGN_TYPE CT ON CT.CAMPAIGN_TYPE_ID = ER.CAMPAIGN_TYPE_ID
        INNER JOIN CAMPAIGN_SUB_TYPE CST ON CST.CAMPAIGN_SUB_TYPE_ID = ER.CAMPAIGN_SUB_TYPE_ID
        LEFT JOIN HL5 hl5 ON hl5.hl5_id= ER.hl5_id
        INNER JOIN HL4 hl4 ON hl4.hl4_id= ER.hl4_id
        INNER JOIN HL3 hl3 ON hl3.hl3_id=hl4.hl3_id
        INNER JOIN HL2 hl2 ON hl2.hl2_id = hl3.hl2_id
        INNER JOIN HL1 hl1 ON hl1.hl1_id = hl2.hl1_id
        INNER JOIN BUDGET_YEAR BGY ON hl1.budget_year_id = BGY.budget_year_id AND BGY.enabled=1 AND BGY.deleted=0
        LEFT JOIN HL2_EVENT_APPROVER HL2_EA ON HL2_EA.USER_ID = IN_USER_ID AND HL2_EA.HL2_ID = HL2.HL2_ID
        LEFT JOIN HL3_EVENT_APPROVER HL3_EA ON HL3_EA.USER_ID = IN_USER_ID AND HL3_EA.HL3_ID = HL3.HL3_ID
        where ER.enabled = 1 and ER.deleted = 0
		order by upper(ER.NAME);

    IF in_isSa = 0 THEN
        out_result = SELECT DISTINCT
                     VA_OUT.EVENT_REQUEST_ID
                     , VA_OUT.EVENT_REQUEST_STATUS_ID
                     , VA_OUT.STATUS_NAME
                     , VA_OUT.HL4_ID
                     , VA_OUT.NAME
                     , VA_OUT.START_DATE
                     , VA_OUT.HL4_CRM_ID
                     , VA_OUT.HL5_ID
                     , VA_OUT.END_DATE
                     , VA_OUT.CITY
                     , VA_OUT.COUNTRY_ID
                     , VA_OUT.COUNTRY_NAME
                     , VA_OUT.VENUE
                     , VA_OUT.EVENT_OWNER
                     , VA_OUT.OBJECTIVE_ID
                     , VA_OUT.OBJECTIVE_NAME
                     , VA_OUT.CAMPAIGN_TYPE_ID
                     , VA_OUT.CAMPAIGN_TYPE_NAME
                     , VA_OUT.CAMPAIGN_SUB_TYPE_ID
                     , VA_OUT.CAMPAIGN_SUB_TYPE_NAME
                     , VA_OUT.DES_TYPE_ID
                     , VA_OUT.DES_TYPE_NAME
                     , VA_OUT.SUMMARY
                     , VA_OUT.PARTICIPANTS_NUMBER
                     , VA_OUT.EXISTING_CUSTOMERS_PERCENTAGE
                     , VA_OUT.COST
                     , VA_OUT.PARTNER_REVENUE
                     , VA_OUT.MNP_VALUE
                     , VA_OUT.MNP_VOLUME
                     , VA_OUT.ENABLE_L5_DELETION
                     , VA_OUT.IS_EVENT_APPROVER
                     FROM :out_result VA_OUT
                     INNER JOIN HL4 hl4 ON hl4.hl4_id = VA_OUT.HL4_ID
                     INNER JOIN HL3 hl3 ON hl3.hl3_id = HL4.HL3_ID
                     LEFT JOIN HL2_USER ON HL2_USER.HL2_ID = HL3.HL2_ID
                     LEFT JOIN HL3_USER ON HL3_USER.HL3_ID = HL4.HL3_ID
                        AND HL3_USER.USER_ID = in_user_id
                        WHERE (VA_OUT.IS_EVENT_APPROVER = 0 AND HL3_USER.USER_ID IS NOT NULL)
                        OR (VA_OUT.IS_EVENT_APPROVER = 1 AND (HL2_USER.USER_ID IS NOT NULL OR HL3_USER.USER_ID IS NOT NULL));
    END IF;
END;

