PROCEDURE "MKTG_PLANNING_TOOL"."mktgplanningtool.db.procedures::GET_INTERLOCK_MESSAGE_BY_INTERLOCK_ID" (

IN in_interlock_request_id BIGINT
, OUT out_result TABLE(
	interlock_request_message_id bigint,
	interlock_request_id bigint,
	message nvarchar(3000),
	created_date_tz timestamp,
	modified_date_tz timestamp,
    sender_id bigint,
    sender_email nvarchar(255)
    )
) 
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER 
	DEFAULT SCHEMA "MKTG_PLANNING_TOOL"
	READS SQL DATA AS
BEGIN
	out_result_T1 = 
	SELECT 
	 IM.INTERLOCK_REQUEST_MESSAGE_ID,
	 IM.INTERLOCK_REQUEST_ID,
	 IM.MESSAGE,
	 IM.CREATED_DATE_TZ,
	 IM.MODIFIED_DATE_TZ,
	 IM.SENDER_ID,
	 USER.EMAIL  AS SENDER_EMAIL
	FROM INTERLOCK_REQUEST_MESSAGE IM
	JOIN USER ON USER.USER_ID = IM.SENDER_ID	
	WHERE IM.DELETED = 0 and IM.ENABLED = 1
	AND IM.INTERLOCK_REQUEST_ID = in_interlock_request_id
	and IM.CREATED_USER_ID = IM.SENDER_ID
	ORDER BY IM.CREATED_DATE_TZ DESC;
	
	out_result_T2 =
	SELECT 
	 IM.INTERLOCK_REQUEST_MESSAGE_ID,
	 IM.INTERLOCK_REQUEST_ID,
	 IM.MESSAGE,
	 IM.CREATED_DATE_TZ,
	 IM.MODIFIED_DATE_TZ,
	 IM.SENDER_ID,
	 ICD.EMAIL  AS SENDER_EMAIL
	FROM INTERLOCK_REQUEST_MESSAGE IM
	JOIN INTERLOCK_CONTACT_DATA ICD ON ICD.INTERLOCK_CONTACT_DATA_ID = IM.SENDER_ID
	WHERE IM.DELETED = 0 and IM.ENABLED = 1
	AND IM.INTERLOCK_REQUEST_ID = in_interlock_request_id
	and IM.CREATED_USER_ID != IM.SENDER_ID
	ORDER BY IM.CREATED_DATE_TZ DESC;
	
	out_result = 
	SELECT 
	 INTERLOCK_REQUEST_MESSAGE_ID,
	 INTERLOCK_REQUEST_ID,
	 MESSAGE,
	 CREATED_DATE_TZ,
	 MODIFIED_DATE_TZ,
	 SENDER_ID,
	 SENDER_EMAIL
	 FROM :out_result_T1 
	 UNION 
	 SELECT 
	 INTERLOCK_REQUEST_MESSAGE_ID,
	 INTERLOCK_REQUEST_ID,
	 MESSAGE,
	 CREATED_DATE_TZ,
	 MODIFIED_DATE_TZ,
	 SENDER_ID,
	 SENDER_EMAIL
	 FROM :out_result_T2
	 ORDER BY CREATED_DATE_TZ ASC;
	
END;
