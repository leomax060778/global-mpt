PROCEDURE "MKTG_PLANNING_TOOL"."mktgplanningtool.db.procedures::GET_HL1_ALLOCATION_SUMMARY" (
	 IN in_budget_year_id BIGINT
	,IN in_region_id BIGINT
	,IN in_subregion_id BIGINT
	,IN in_limit INTEGER
	,IN in_offset INTEGER
	,IN in_search_string NVARCHAR(255)
	,IN in_user_id BIGINT
	,IN in_is_super_Admin tinyint
	,OUT out_result TABLE (
        HL1_ID BIGINT
        , HL2_TOTAL_COUNT INTEGER
        , ACRONYM NVARCHAR(25)
        , CRM_ID NVARCHAR(25)
        , BUDGET_YEAR NVARCHAR(255)
        , IS_LOCKED TINYINT
        , CATEGORY_NAME NVARCHAR(255)
        , OPTION_NAME NVARCHAR(255)
        , BUDGET_DISTRIBUTION_PERCENTAGE DECIMAL(19, 2)
        , BUDGET_DISTRIBUTION_AMOUNT DECIMAL(19, 2)
        , HL1_DESCRIPTION NVARCHAR(255)
        , SUB_AMOUNT DECIMAL(19, 2)
		)
	,OUT out_total_rows INTEGER
)
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER
	DEFAULT SCHEMA "MKTG_PLANNING_TOOL"
	READS SQL DATA AS
BEGIN
    DECLARE va_all_regions TINYINT;
    -- this filter is necesary to filter GLOBALS, where region_id = 0
    va_all_regions = CASE WHEN in_region_id = -1 THEN 1 ELSE 0 END;

    va_limits = SELECT DISTINCT summary.HL1_ID,
    							summary.L1_ACRONYM
                FROM "_SYS_BIC"."mktgplanningtool.db.data.views/CV_HL1_LOB_ALLOCATION_SUMMARY" summary
                WHERE summary.BUDGET_YEAR_ID = in_budget_year_id
                    AND ( (:va_all_regions = 0 AND (summary.REGION_ID = in_region_id OR in_region_id = 0))
                                OR
                          (:va_all_regions = 1 AND summary.REGION_ID = 0)
                        )
                    AND (in_is_super_Admin = 1 OR summary.HL1_ID IN (SELECT HL1_ID FROM HL1_USER WHERE USER_ID = in_user_id))
                    AND (in_search_string = ''
                            OR CONTAINS ((summary.L1_ACRONYM,
                                          summary.HL1_DESCRIPTION),
                                         in_search_string
                                         )
                    )
                 ORDER BY summary.L1_ACRONYM;
	out_result = SELECT summary.HL1_ID,
                        summary.TOTAL_OF_PRIORITIES AS hl2_total_count,
                        UPPER(summary.L1_ACRONYM) as acronym,
                        "MKTG_PLANNING_TOOL"."mktgplanningtool.db.functions::GET_CRM_ID"(summary.BUDGET_YEAR, summary.L1_ACRONYM, '', '', '', '', '') AS CRM_ID,
                        summary.BUDGET_YEAR,
                        summary.IS_LOCKED,
                        summary.CATEGORY_NAME,
                        summary.OPTION_NAME,
                        summary.BUDGET_DISTRIBUTION_PERCENTAGE,
                        summary.BUDGET_DISTRIBUTION_AMOUNT,
                        summary.HL1_DESCRIPTION,
                        summary.SUB_AMOUNT
                    FROM  "_SYS_BIC"."mktgplanningtool.db.data.views/CV_HL1_LOB_ALLOCATION_SUMMARY" summary
                    WHERE summary.HL1_ID IN (SELECT lim.HL1_ID FROM :va_limits lim LIMIT :in_limit OFFSET :in_offset)
                    ORDER BY summary.L1_ACRONYM;

    --Calculate total of rows
    SELECT DISTINCT COUNT(l1s.HL1_ID)
        INTO out_total_rows
        FROM  :va_limits l1s;
END;

