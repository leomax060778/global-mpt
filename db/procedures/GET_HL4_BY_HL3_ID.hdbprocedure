PROCEDURE "MKTG_PLANNING_TOOL"."mktgplanningtool.db.procedures::GET_HL4_BY_HL3_ID" (
        IN in_hl3_id BIGINT,
        OUT out_result TABLE(
            HL4_ID BIGINT
            , HL4_CRM_DESCRIPTION NVARCHAR(100)
            , HL4_ACRONYM NVARCHAR(25)
            , CRM_ID NVARCHAR(25)
            , IN_BUDGET Tinyint
            , STATUS_ID BIGINT
            , STATUS_DETAIL NVARCHAR(255)
            , CREATED_BY NVARCHAR(255)
            , OWNER_EMAIL NVARCHAR(500)
            , HL4_BUDGET DECIMAL
            , IMPLEMENT_EXECUTION_LEVEL TINYINT
            , TOTAL_HL5 INT
            , QUANTITY_HL5_OUT_BUDGET INT
            , ALLOCATED DECIMAL
            , REMAINING DECIMAL
            , IN_CRM_CHILD_HL5 INTEGER
            , IN_CRM_CHILD_HL6 INTEGER
            , ENABLE_CRM_CREATION TINYINT
        ),
		OUT out_total_budget DECIMAL(19, 2),
		OUT out_remaining_budget DECIMAL(19, 2),
        OUT out_total_allocated DECIMAL(19, 2)
)
LANGUAGE SQLSCRIPT
SQL SECURITY INVOKER
DEFAULT SCHEMA "MKTG_PLANNING_TOOL"
AS
BEGIN
	DECLARE va_total_budget DECIMAL(19, 2);
	DECLARE va_remaining_budget DECIMAL(19, 2);
	va_total_budget := 0;
	va_remaining_budget := 0;

va_intermidate = SELECT
        hl4.hl4_ID AS HL4_ID
        ,hl4.hl4_crm_description AS HL4_CRM_DESCRIPTION
        ,hl4.acronym AS HL4_ACRONYM
        , "MKTG_PLANNING_TOOL"."mktgplanningtool.db.functions::GET_CRM_ID"(BGY.BUDGET_YEAR, HL1.acronym, hl2.ORGANIZATION_ACRONYM, HL3.acronym, hl4.acronym, '', '') AS CRM_ID
        ,hl4.IN_BUDGET as IN_BUDGET
        ,hl4.hl4_status_detail_id AS STATUS_ID
        ,hl4_status_detail.detail  AS STATUS_DETAIL
        ,CONCAT(CONCAT(userTable.FIRST_NAME, ' '),userTable.LAST_NAME) AS CREATED_BY
        ,userTable.EMAIL AS OWNER_EMAIL
        ,hl4.BUDGET AS HL4_BUDGET
        ,HL2.IMPLEMENT_EXECUTION_LEVEL
        ,HL4.ENABLE_CRM_CREATION AS ENABLE_CRM_CREATION

        FROM HL4 hl4
    INNER JOIN HL3 hl3 ON hl3.hl3_id=hl4.hl3_id AND hl3.enabled=1 AND hl3.deleted=0
    INNER JOIN HL2 hl2 ON hl2.hl2_id = hl3.hl2_id AND hl2.enabled=1 AND hl2.deleted=0
    INNER JOIN HL1 hl1 ON hl1.hl1_id = hl2.hl1_id AND hl1.enabled=1 AND hl1.deleted=0
    INNER JOIN BUDGET_YEAR BGY ON hl1.budget_year_id = BGY.budget_year_id AND BGY.enabled=1 AND BGY.deleted=0
    INNER JOIN hl4_status_detail hl4_status_detail ON hl4_status_detail.hl4_status_detail_id = hl4.hl4_status_detail_id
    INNER JOIN "MKTG_PLANNING_TOOL"."USER" userTable ON userTable.USER_ID = hl4.created_user_id
    WHERE hl4.enabled=1 AND hl4.deleted=0
	AND hl3.hl3_id = in_hl3_id;

va_hl6 = SELECT HL6.HL6_ID, HL6.HL5_ID
            FROM HL6
            WHERE HL6.HL6_STATUS_DETAIL_ID = 2
                OR HL6.HL6_STATUS_DETAIL_ID = 3
                OR HL6.HL6_STATUS_DETAIL_ID = 4;
va_hl5_budget =
select L5.hl4_id, coalesce(sum(L5.budget),0) AS budget
    from hl3 L3
    inner join hl4 L4 ON L3.hl3_id=L4.hl3_id AND L3.enabled=1 AND L3.deleted=0
    inner join hl5 L5 ON L5.hl4_id = L4.hl4_id and  L4.enabled=1 AND L4.deleted=0
    where L5.enabled = 1 and L5.deleted = 0 and L3.hl3_id = in_hl3_id
    --- This means that will be included those records that aren´t in Deleted In CRM ---
    	  AND L5.HL5_STATUS_DETAIL_ID != 10
    group by L5.hl4_id;

out_result = SELECT
        va_hl4.HL4_ID
		,va_hl4.HL4_CRM_DESCRIPTION
		,va_hl4.HL4_ACRONYM
		,va_hl4.CRM_ID
		,va_hl4.IN_BUDGET
		,va_hl4.STATUS_ID
		,va_hl4.STATUS_DETAIL
		,va_hl4.CREATED_BY
		,va_hl4.OWNER_EMAIL
		,va_hl4.HL4_BUDGET
		,va_hl4.IMPLEMENT_EXECUTION_LEVEL

		, COUNT(DISTINCT HL5.HL5_ID) + COUNT(DISTINCT HL5L.HL5_LEGACY_ID) AS TOTAL_HL5
		, SUM(CASE WHEN  HL5.IN_BUDGET IS NULL THEN 0 WHEN HL5.IN_BUDGET = 0 THEN 1 ELSE 0 END) QUANTITY_HL5_OUT_BUDGET --# of L5 out off budget
		, va_hl5_budget.budget AS ALLOCATED
		, COALESCE((va_hl4.HL4_BUDGET - va_hl5_budget.budget), va_hl4.HL4_BUDGET) AS REMAINING
		, SUM(CASE WHEN (hl5.HL5_STATUS_DETAIL_ID = 2 OR hl5.HL5_STATUS_DETAIL_ID = 3 OR hl5.HL5_STATUS_DETAIL_ID = 4) THEN 1 ELSE 0 END) AS IN_CRM_CHILD_HL5
		, SUM(CASE WHEN va_hl6.HL6_ID > 0 THEN 1 ELSE 0 END) AS IN_CRM_CHILD_HL6
		,va_hl4.ENABLE_CRM_CREATION

    FROM :va_intermidate va_hl4
        LEFT JOIN HL5 hl5 ON hl5.HL4_ID = va_hl4.hl4_id AND hl5.enabled = 1 AND hl5.deleted = 0
            --- This means that will be included those records that aren´t in Deleted In CRM ---
            	  AND HL5.HL5_STATUS_DETAIL_ID != 10
        LEFT JOIN HL5_LEGACY HL5L ON HL5L.HL4_ID = va_hl4.HL4_ID AND HL5L.ENABLED = 1 AND HL5L.DELETED = 0
            --- This means that will be included those records that aren´t in Deleted In CRM ---
                  AND HL5L.HL5_STATUS_DETAIL_ID != 10
        LEFT JOIN :va_hl6 va_hl6 ON hl5.HL5_ID = va_hl6.HL5_ID
        LEFT JOIN :va_hl5_budget va_hl5_budget ON va_hl5_budget.HL4_ID = va_hl4.hl4_id


	GROUP BY
	va_hl4.HL4_ID,va_hl4.HL4_CRM_DESCRIPTION,va_hl4.HL4_ACRONYM,va_hl4.CRM_ID,va_hl4.IN_BUDGET,va_hl4.STATUS_ID,
		va_hl4.STATUS_DETAIL,va_hl4.CREATED_BY,va_hl4.OWNER_EMAIL,va_hl4.HL4_BUDGET,
		va_hl4.IMPLEMENT_EXECUTION_LEVEL, va_hl5_budget.budget, va_hl4.ENABLE_CRM_CREATION
		ORDER BY va_hl4.HL4_ACRONYM ASC;
		
		
	SELECT HL3.HL3_FNC_BUDGET_TOTAL
    	    INTO out_total_budget
    	    FROM HL3
    	    WHERE HL3.HL3_ID = in_hl3_id;

    	SELECT COALESCE(SUM(HL4.HL4_BUDGET), 0)
    	    INTO out_total_allocated
    	    FROM (
    	        SELECT DISTINCT HL4_ID, HL4_BUDGET FROM :va_intermidate
    	        where
    	        --- This means that will be included those records that aren´t in Deleted In CRM ---
                  STATUS_ID != 10
    	    ) HL4;
    out_remaining_budget := out_total_budget - out_total_allocated;
		
END;
