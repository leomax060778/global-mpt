PROCEDURE "MKTG_PLANNING_TOOL"."mktgplanningtool.db.procedures::GET_IMPORT"(
		OUT OUT_RESULT TABLE (
			IMPORT_L5_L6_ID BIGINT,
			DESCRIPTION NVARCHAR(255),
			USER_NAME NVARCHAR(500),
			CREATED_DATE_TZ TIMESTAMP,
			DELETED TINYINT,
			count_l5 INTEGER,
			count_l6 INTEGER,
			total_row INTEGER
		)
	)
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER
	DEFAULT SCHEMA "MKTG_PLANNING_TOOL"
	READS SQL DATA
AS
BEGIN
	OUT_RESULT = SELECT I.IMPORT_L5_L6_ID, 
				I.DESCRIPTION, 
				CONCAT(
					CONCAT(
						U.LAST_NAME, 
						', '
					), 
					U.FIRST_NAME
				) AS USER_NAME, 
				I.CREATED_DATE_TZ, 
				I.DELETED, 
				L5.COUNT_L5 AS count_l5, 
				L6.COUNT_L6 AS count_l6, 
				T.TOTAL_ROW AS total_row
			FROM IMPORT_L5_L6 AS I
				INNER JOIN USER AS U
				ON U.USER_ID = I.CREATED_USER_ID
				LEFT OUTER JOIN (
								SELECT COUNT(HL5_ID) AS COUNT_L5, 
						HL5.IMPORT_ID
					FROM HL5
					WHERE hl5.IMPORT_ID IS NOT NULL
					GROUP BY HL5.IMPORT_ID
				) AS L5
				ON L5.IMPORT_ID = I.IMPORT_L5_L6_ID
				LEFT OUTER JOIN (
								SELECT COUNT(HL6_ID) AS COUNT_L6, 
						HL6.IMPORT_ID
					FROM HL6
					WHERE hl6.IMPORT_ID IS NOT NULL
					GROUP BY HL6.IMPORT_ID
				) AS L6
				ON L6.IMPORT_ID = I.IMPORT_L5_L6_ID
				LEFT OUTER JOIN (
								SELECT COUNT(UPLOAD_LOG_ID) AS TOTAL_ROW, 
						IMPORT_ID
					FROM UPLOAD_LOG
					GROUP BY IMPORT_ID
				) AS T
				ON T.IMPORT_ID = I.IMPORT_L5_L6_ID
			ORDER BY I.IMPORT_L5_L6_ID ASC, 
				I.CREATED_DATE_TZ ASC;
END;
