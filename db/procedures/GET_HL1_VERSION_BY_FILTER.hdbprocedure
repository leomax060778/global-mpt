PROCEDURE "MKTG_PLANNING_TOOL"."mktgplanningtool.db.procedures::GET_HL1_VERSION_BY_FILTER"(
		IN in_budget_year_id BIGINT, 
		IN in_region_id BIGINT, 
		IN in_subregion_id BIGINT, 
		IN in_user_id BIGINT, 
		IN in_is_super_admin TINYINT, 
		OUT out_result TABLE (
			hl1_id BIGINT,
			acronym NVARCHAR(25),
			description NVARCHAR(255),
			REGION_NAME NVARCHAR(255),
			SUBREGION_NAME NVARCHAR(255),
			BUDGET_YEAR INTEGER,
			budget DECIMAL(19, 2),
			version INTEGER,
			crt_related INTEGER,
			implement_execution_level TINYINT,
			team_type_id INTEGER,
			created_date_tz TIMESTAMP,
			created_user_id INTEGER
		)
	)
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER
	DEFAULT SCHEMA "MKTG_PLANNING_TOOL"
	READS SQL DATA
AS
BEGIN
	aux_hl1 = SELECT coalesce(
					hl1_version.hl1_id, 
					hl1.hl1_id
				) AS hl1_id, 
				coalesce(
					upper(hl1_version.acronym), 
					upper(hl1.acronym)
				) AS acronym, 
				coalesce(
					hl1_version.description, 
					hl1.description
				) AS description, 
				coalesce(
					hl1_version.budget, 
					hl1.budget
				) AS budget, 
				coalesce(
					hl1_version.region_id, 
					hl1.region_id
				) AS region_id, 
				coalesce(
					hl1_version.subregion_id, 
					hl1.subregion_id
				) AS subregion_id, 
				coalesce(
					hl1_version.budget_year_id, 
					hl1.budget_year_id
				) AS budget_year_id, 
				coalesce(
					hl1_version.version, 
					hl1.version
				) AS version, 
				coalesce(
					hl1_version.crt_related, 
					hl1.crt_related
				) AS crt_related, 
				coalesce(
					hl1_version.implement_execution_level, 
					hl1.implement_execution_level
				) AS implement_execution_level, 
				coalesce(
					hl1_version.team_type_id, 
					hl1.team_type_id
				) AS team_type_id, 
				coalesce(
					hl1_version.created_date_tz, 
					hl1.created_date_tz
				) AS created_date_tz, 
				coalesce(
					hl1_version.created_user_id, 
					hl1.created_user_id
				) AS created_user_id
			FROM hl1
				LEFT OUTER JOIN hl1_version
				ON hl1.hl1_id = hl1_version.hl1_id
					AND hl1.deleted = 0
					AND hl1.enabled = 1
			WHERE (hl1.version = 1
					OR hl1_version.version = 1)
				AND hl1.deleted = 0
				AND hl1.enabled = 1;
	va_subresult = SELECT hl1.hl1_id, 
				upper(hl1.acronym) AS acronym, 
				hl1.description, 
				hl1.region_id, 
				r.region_name, 
				sr.subregion_name, 
				buy.budget_year, 
				hl1.budget, 
				hl1.version, 
				hl1.crt_related, 
				hl1.implement_execution_level, 
				hl1.team_type_id, 
				hl1.created_date_tz, 
				hl1.created_user_id
			FROM :aux_hl1 AS hl1
				INNER JOIN budget_year AS buy
				ON buy.budget_year_id = hl1.budget_year_id
				LEFT OUTER JOIN region AS r
				ON r.region_id = hl1.region_id
				LEFT OUTER JOIN subregion AS sr
				ON sr.subregion_id = hl1.subregion_id
			WHERE buy.budget_year_id = in_budget_year_id
				AND (sr.subregion_id = in_subregion_id
					OR in_subregion_id = 0)
				AND (hl1.hl1_id IN (SELECT hl1_id
						FROM hl1_user
						WHERE user_id = in_user_id
							OR in_is_super_admin = 1));
	IF (in_region_id = -1) THEN
		out_result = SELECT T.HL1_ID, 
					T.ACRONYM, 
					T.DESCRIPTION, 
					T.REGION_NAME, 
					T.SUBREGION_NAME, 
					T.BUDGET_YEAR, 
					T.BUDGET, 
					T.VERSION, 
					T.CRT_RELATED, 
					T.IMPLEMENT_EXECUTION_LEVEL, 
					T.TEAM_TYPE_ID, 
					T.CREATED_DATE_TZ, 
					T.CREATED_USER_ID
				FROM :va_subresult AS T
				WHERE T.REGION_ID = 0;
	ELSE
		out_result = SELECT T.HL1_ID, 
					T.ACRONYM, 
					T.DESCRIPTION, 
					T.REGION_NAME, 
					T.SUBREGION_NAME, 
					T.BUDGET_YEAR, 
					T.BUDGET, 
					T.VERSION, 
					T.CRT_RELATED, 
					T.IMPLEMENT_EXECUTION_LEVEL, 
					T.TEAM_TYPE_ID, 
					T.CREATED_DATE_TZ, 
					T.CREATED_USER_ID
				FROM :va_subresult AS T
				WHERE T.REGION_ID = in_region_id
					OR in_region_id = 0;
	END IF;
END;
