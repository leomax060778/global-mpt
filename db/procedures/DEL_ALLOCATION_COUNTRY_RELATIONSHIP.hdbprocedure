PROCEDURE "MKTG_PLANNING_TOOL"."mktgplanningtool.db.procedures::DEL_ALLOCATION_COUNTRY_RELATIONSHIP" (
	IN in_level_id integer,
	IN in_l2_id integer,
	in in_user_id integer,
	IN optionList TABLE(
                    in_allocation_country_category_option_id integer
            		),
	OUT out_result integer)
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER
	DEFAULT SCHEMA "MKTG_PLANNING_TOOL"
	AS
BEGIN

DECLARE levelName nvarchar(255);
    levelName := '';

    select description into levelName from hierarchy_level where hierarchy_level_id = in_level_id;

     IF levelName = 'HL5' THEN
        UPDATE ACOL
        SET ACOL.DELETED = 1
        , ACOL.ENABLED = 0
        , ACOL.modified_user_id = in_user_id
        , ACOL.modified_date_tz = CURRENT_TIMESTAMP
        FROM ALLOCATION_COUNTRY_CATEGORY_OPTION_LEVEL ACOL
        INNER JOIN ALLOCATION_COUNTRY_CATEGORY_OPTION OP on ACOL.ALLOCATION_COUNTRY_CATEGORY_OPTION_ID = OP.ALLOCATION_COUNTRY_CATEGORY_OPTION_ID

        INNER JOIN ALLOCATION_COUNTRY_CATEGORY_OPTION_LEVEL_HL2 ACOL2 ON ACOL2.ALLOCATION_COUNTRY_CATEGORY_OPTION_LEVEL_ID = ACOL.ALLOCATION_COUNTRY_CATEGORY_OPTION_LEVEL_ID
            AND ACOL2.HL2_ID = in_l2_id

        WHERE ACOL.ALLOCATION_COUNTRY_CATEGORY_OPTION_LEVEL_ID NOT IN (SELECT hl5.ALLOCATION_COUNTRY_CATEGORY_OPTION_LEVEL_ID
                                                                              FROM HL5_COUNTRY_CATEGORY_OPTION hl5
                                                                              INNER JOIN ALLOCATION_COUNTRY_CATEGORY_OPTION_LEVEL ACOLl on ACOLL.ALLOCATION_COUNTRY_CATEGORY_OPTION_LEVEL_ID = hl5.ALLOCATION_COUNTRY_CATEGORY_OPTION_LEVEL_ID
                                                                              INNER JOIN ALLOCATION_COUNTRY_CATEGORY_OPTION_LEVEL_HL2 ACOL22 ON ACOL22.ALLOCATION_COUNTRY_CATEGORY_OPTION_LEVEL_ID = ACOLL.ALLOCATION_COUNTRY_CATEGORY_OPTION_LEVEL_ID
                                                                                  AND ACOL22.HL2_ID = in_l2_id
                                                                              WHERE hl5.DELETED = 0 AND hl5.ENABLED = 1 and hl5.amount > 0) --not referenced
        AND ACOL.HIERARCHY_LEVEL_ID = in_level_id
        AND OP.ALLOCATION_COUNTRY_CATEGORY_OPTION_ID NOT IN (SELECT in_allocation_country_category_option_id FROM :optionList)
        and ACOL.ENABLED = 1 AND ACOL.DELETED = 0;

     ELSEIF levelName = 'HL6' THEN
        UPDATE ACOL
                SET ACOL.DELETED = 1
                , ACOL.ENABLED = 0
                , ACOL.modified_user_id = in_user_id
                , ACOL.modified_date_tz = CURRENT_TIMESTAMP
                FROM ALLOCATION_COUNTRY_CATEGORY_OPTION OP
                INNER JOIN ALLOCATION_COUNTRY_CATEGORY_OPTION_LEVEL ACOL on ACOL.ALLOCATION_COUNTRY_CATEGORY_OPTION_ID = OP.ALLOCATION_COUNTRY_CATEGORY_OPTION_ID
                INNER JOIN ALLOCATION_COUNTRY_CATEGORY_OPTION_LEVEL_HL2 ACOL2 ON ACOL2.ALLOCATION_COUNTRY_CATEGORY_OPTION_LEVEL_ID = ACOL.ALLOCATION_COUNTRY_CATEGORY_OPTION_LEVEL_ID
                    AND ACOL2.HL2_ID = in_l2_id

                WHERE ACOL.ALLOCATION_COUNTRY_CATEGORY_OPTION_LEVEL_ID NOT IN (SELECT hl6.ALLOCATION_COUNTRY_CATEGORY_OPTION_LEVEL_ID
                        FROM HL6_COUNTRY_CATEGORY_OPTION hl6
                        INNER JOIN ALLOCATION_COUNTRY_CATEGORY_OPTION_LEVEL ACOLL on ACOLL.ALLOCATION_COUNTRY_CATEGORY_OPTION_LEVEL_ID = hl6.ALLOCATION_COUNTRY_CATEGORY_OPTION_LEVEL_ID
                        INNER JOIN ALLOCATION_COUNTRY_CATEGORY_OPTION_LEVEL_HL2 ACOL22 ON ACOL22.ALLOCATION_COUNTRY_CATEGORY_OPTION_LEVEL_ID = ACOLL.ALLOCATION_COUNTRY_CATEGORY_OPTION_LEVEL_ID
                            AND ACOL22.HL2_ID = in_l2_id
                        WHERE hl6.DELETED = 0 AND hl6.ENABLED = 1 and hl6.amount > 0)
                AND ACOL.HIERARCHY_LEVEL_ID = in_level_id
                AND OP.ALLOCATION_COUNTRY_CATEGORY_OPTION_ID NOT IN (SELECT in_allocation_country_category_option_id FROM :optionList)

                and ACOL.ENABLED = 1 AND ACOL.DELETED = 0;
     END IF;

    SELECT ::ROWCOUNT INTO out_result FROM DUMMY;

END;
