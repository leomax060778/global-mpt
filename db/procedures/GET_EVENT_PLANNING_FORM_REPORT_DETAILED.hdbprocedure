PROCEDURE "MKTG_PLANNING_TOOL"."mktgplanningtool.db.procedures::GET_EVENT_PLANNING_FORM_REPORT_DETAILED" (
		IN IN_HL1_ID BIGINT,
		IN IN_HL2_ID BIGINT,
		IN IN_HL3_ID BIGINT,
		IN IN_BUDGET_YEAR_ID BIGINT,
		IN IN_REGION_ID BIGINT,
        OUT out_result table (
            ORDER00_EVENT_ANSWER NVARCHAR(10),
        	ORDER01_HL_LEVEL NVARCHAR(3),
            HL_PARENT_LEVEL_ID INTEGER,
        	HL_ID INTEGER,
        	HIERARCHY_LEVEL_ID INTEGER,
            ORDER05_CRM_ID NVARCHAR(25),
            ORDER06_CRM_DESCRIPTION NVARCHAR(100),
            ORDER07_STATUS NVARCHAR(255),
            ORDER08_HL1_PATH NVARCHAR(25),
            ORDER09_HL2_PATH NVARCHAR(25),
            ORDER10_HL3_PATH NVARCHAR(25),
            ORDER11_HL4_PATH NVARCHAR(25),
            ORDER12_OBJECTIVE_NAME NVARCHAR(255),
            ORDER13_CAMPAIGN_SUB_TYPE_NAME NVARCHAR(255),
            ORDER14_DES_TYPE_NAME NVARCHAR(255),
            ORDER15_MARKETING_PROGRAM_NAME NVARCHAR(255),
            ORDER16_ACTUAL_START_DATE NVARCHAR(255),
            ORDER17_ACTUAL_END_DATE NVARCHAR(255),
            ORDER18_EMPLOYEE_RESPONSIBLE_USER NVARCHAR(7),
            ORDER19_CREATED_USER NVARCHAR(255),
            ORDER20_CREATED_DATE_TZ TIMESTAMP,
            ORDER21_EVENT_BUSINESS_OWNER NVARCHAR(255),
            ORDER22_COUNTRY NVARCHAR(255),
            ORDER23_CITY NVARCHAR(255),
            ORDER24_EVENT_SUMMARY NVARCHAR(1000),
            ORDER25_BUSINESS_CASE NVARCHAR(1000),
            ORDER26_TARGET_AUDIENCE NVARCHAR(300),
            ORDER27_REGISTRATION_PROCESS NVARCHAR(255),
            ORDER28_NUMBER_OF_PARTICIPANTS NVARCHAR(255),
            ORDER29_EXISTING_CUSTOMER_PERCENTAGE DECIMAL(19,2),
            ORDER30_AFFILIATED_WITH_LARGER_EVENT NVARCHAR(255),
            ORDER31_AFFILIATED_EVENT_NAME NVARCHAR(255),
            ORDER32_EVENT_FOLLOW_UP_ACTIVITIES NVARCHAR(255),
            ORDER33_GROSS_COST DECIMAL(19,6),
            ORDER34_NET_COST DECIMAL(19,6),
            ORDER35_EXPECTED_REVENUE DECIMAL(19,6),
            ORDER36_EXPECTED_COFOUNDING DECIMAL(19,6)
        ),
        OUT out_lob_category TABLE(
            HIERARCHY_LEVEL_ID INTEGER,
            HL_ID INTEGER,
            ALLOCATION_CATEGORY_ID INTEGER,
            CATEGORY_NAME NVARCHAR(255),
            ALLOCATION_OPTION_ID INTEGER,
            OPTION_NAME NVARCHAR(255),
            AMOUNT DECIMAL(19,6),
            ALLOCATION_CATEGORY_OPTION_LEVEL_ID INTEGER
        ),
        OUT out_segment_category TABLE(
            HIERARCHY_LEVEL_ID INTEGER,
            HL_ID INTEGER,
            ALLOCATION_CATEGORY_ID INTEGER,
            CATEGORY_NAME NVARCHAR(255),
            ALLOCATION_OPTION_ID INTEGER,
            OPTION_NAME NVARCHAR(255),
            AMOUNT DECIMAL(19,6),
            ALLOCATION_CATEGORY_OPTION_LEVEL_ID INTEGER
        )
	)
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER
	DEFAULT SCHEMA "MKTG_PLANNING_TOOL"
	READS SQL DATA AS
BEGIN
    out_result_hl5 = SELECT 'HL5' AS HL_LEVEL,
                            hl5.HL4_ID AS HL_PARENT_LEVEL_ID,
                            hl5.HL5_ID AS HL_ID,
                            2 as HIERARCHY_LEVEL_ID,
                            "MKTG_PLANNING_TOOL"."mktgplanningtool.db.functions::GET_CRM_ID"(
                                buy.BUDGET_YEAR,
                                hl1.ACRONYM,
                                hl2.ORGANIZATION_ACRONYM,
                                hl3.ACRONYM,
                                hl4.ACRONYM,
                                hl5.ACRONYM,
                                '') AS CRM_ID,
                            hl5.HL5_CRM_DESCRIPTION AS CRM_DESCRIPTION,
                            hl5_status.DETAIL AS STATUS,
                            "MKTG_PLANNING_TOOL"."mktgplanningtool.db.functions::GET_CRM_ID"(buy.BUDGET_YEAR, hl1.ACRONYM, '', '', '', '', '') AS HL1_PATH,
                            "MKTG_PLANNING_TOOL"."mktgplanningtool.db.functions::GET_CRM_ID"(buy.BUDGET_YEAR, hl1.ACRONYM, hl2.ORGANIZATION_ACRONYM, '', '', '', '') AS HL2_PATH,
                            "MKTG_PLANNING_TOOL"."mktgplanningtool.db.functions::GET_CRM_ID"(buy.BUDGET_YEAR, hl1.ACRONYM, hl2.ORGANIZATION_ACRONYM, hl3.ACRONYM, '', '', '') AS HL3_PATH,
                            "MKTG_PLANNING_TOOL"."mktgplanningtool.db.functions::GET_CRM_ID"(buy.BUDGET_YEAR, hl1.ACRONYM, hl2.ORGANIZATION_ACRONYM, hl3.ACRONYM, hl4.ACRONYM, '', '') AS HL4_PATH,
                            cobj.NAME AS OBJECTIVE_NAME,
                            csub.NAME AS CAMPAIGN_SUB_TYPE_NAME,
                            dtype.NAME AS DES_TYPE_NAME,
                            mprogram.NAME AS MARKETING_PROGRAM_NAME,
                            TO_NVARCHAR(hl5.ACTUAL_START_DATE, 'MM/DD/YYYY') AS ACTUAL_START_DATE,
                            TO_NVARCHAR(hl5.ACTUAL_END_DATE, 'MM/DD/YYYY') AS ACTUAL_END_DATE,
                            hl5.EMPLOYEE_RESPONSIBLE_USER,
                            CONCAT(us.USER_NAME, CONCAT(' - ', CONCAT(us.FIRST_NAME, CONCAT(' ', us.LAST_NAME)))) AS CREATED_USER,
                            hl5.CREATED_DATE_TZ,
                            hl5.EVENT_OWNER AS EVENT_BUSINESS_OWNER,
                            ctry.NAME AS COUNTRY,
                            hl5.CITY,
                            hl5.EVENT_SUMMARY,
                            hl5.BUSINESS_CASE,
                            STRING_AGG(tgaud.NAME, ',') AS TARGET_AUDIENCE,
                            rproc.NAME AS REGISTRATION_PROCESS,
                            hl5.NUMBER_OF_PARTICIPANTS,
                            hl5.EXISTING_CUSTOMER_PERCENTAGE,
                            awle.NAME AS AFFILIATED_WITH_LARGER_EVENT,
                            hl5.AFFILIATED_EVENT_NAME,
                            hl5.EVENT_FOLLOW_UP_ACTIVITIES,
                            hl5.GROSS_COST,
                            hl5.NET_COST,
                            COALESCE(hl5.EXPECTED_REVENUE, 0) AS EXPECTED_REVENUE,
                            COALESCE(hl5.EXPECTED_COFOUNDING, 0) AS EXPECTED_COFOUNDING,
                            CASE
                                WHEN hl5.EVENT_ANSWER_ID = 1 THEN 'main tactic'
                                WHEN hl5.EVENT_ANSWER_ID = 2 THEN 'event within event'
                                WHEN hl5.EVENT_ANSWER_ID = 3 THEN 'not a specific event'
                                ELSE 'No Value'
                                END AS EVENT_ANSWER

                            FROM HL5
                            INNER JOIN OBJECTIVE cobj
                                ON cobj.OBJECTIVE_ID = hl5.CAMPAIGN_OBJECTIVE_ID
                            INNER JOIN CAMPAIGN_TYPE ctype
                                ON ctype.CAMPAIGN_TYPE_ID = hl5.CAMPAIGN_TYPE_ID
                                    AND ctype.SHOW_ADDITIONAL_FIELDS = 1
                            LEFT JOIN CAMPAIGN_SUB_TYPE csub
                                ON csub.CAMPAIGN_SUB_TYPE_ID = hl5.CAMPAIGN_SUBTYPE_ID
                            LEFT JOIN DES_TYPE dtype
                                ON hl5.DES_TYPE_ID = dtype.DES_TYPE_ID
                            LEFT JOIN MARKETING_PROGRAM mprogram
                                ON hl5.MARKETING_PROGRAM_ID = mprogram.MARKETING_PROGRAM_ID
                            INNER JOIN USER us
                                ON us.USER_ID = hl5.CREATED_USER_ID
                            LEFT JOIN COUNTRY ctry
                                ON ctry.COUNTRY_ID = hl5.COUNTRY_ID
                            LEFT JOIN HL5_TARGET_AUDIENCE hl5tgaud
                                ON hl5tgaud.HL5_ID = hl5.HL5_ID
                            LEFT JOIN TARGET_AUDIENCE tgaud
                                ON tgaud.TARGET_AUDIENCE_ID = hl5tgaud.TARGET_AUDIENCE_ID
                            LEFT JOIN REGISTRATION_PROCESS rproc
                                ON rproc.REGISTRATION_PROCESS_ID = hl5.REGISTRATION_PROCESS_ID
                            LEFT JOIN AFFILIATED_WITH_LARGER_EVENT awle
                                ON awle.AFFILIATED_WITH_LARGER_EVENT_ID = hl5.AFFILIATED_WITH_LARGER_EVENT_ID
                            INNER JOIN HL5_STATUS_DETAIL hl5_status
                                ON hl5_status.HL5_STATUS_DETAIL_ID = hl5.HL5_STATUS_DETAIL_ID
                            INNER JOIN HL4 hl4
                                ON hl4.HL4_ID = hl5.HL4_ID
                            INNER JOIN HL3 hl3
                                ON hl3.HL3_ID = hl4.HL3_ID
                                    AND (hl3.HL3_ID = IN_HL3_ID OR 0 = IN_HL3_ID)
                            INNER JOIN HL2 hl2
                                ON hl2.HL2_ID = hl3.HL2_ID
                                    AND (hl2.HL2_ID = IN_HL2_ID OR 0 = IN_HL2_ID)
                            INNER JOIN HL1 hl1
                                ON hl1.HL1_ID = hl2.HL1_ID
                                    AND (hl1.HL1_ID = IN_HL1_ID OR 0 = IN_HL1_ID)
                            INNER JOIN BUDGET_YEAR buy
                                ON buy.BUDGET_YEAR_ID = hl1.BUDGET_YEAR_ID
                                    AND (buy.BUDGET_YEAR_ID = IN_BUDGET_YEAR_ID OR 0 = IN_BUDGET_YEAR_ID)
                            LEFT JOIN REGION reg
                                ON reg.REGION_ID = hl1.REGION_ID
                                    AND (reg.REGION_ID = IN_REGION_ID OR 0 = IN_REGION_ID)
                            WHERE hl5.ENABLED = 1
                                AND hl5.DELETED = 0
                                AND (reg.REGION_ID = IN_REGION_ID OR 0 = IN_REGION_ID)

                            GROUP BY
                                hl5.HL4_ID,
                                hl5.HL5_ID,
                                "MKTG_PLANNING_TOOL"."mktgplanningtool.db.functions::GET_CRM_ID"(
                                    buy.BUDGET_YEAR,
                                    hl1.ACRONYM,
                                    hl2.ORGANIZATION_ACRONYM,
                                    hl3.ACRONYM,
                                    hl4.ACRONYM,
                                    hl5.ACRONYM,
                                    ''),
                                hl5.HL5_CRM_DESCRIPTION,
                                hl5_status.DETAIL,
                                "MKTG_PLANNING_TOOL"."mktgplanningtool.db.functions::GET_CRM_ID"(buy.BUDGET_YEAR, hl1.ACRONYM, '', '', '', '', ''),
                                "MKTG_PLANNING_TOOL"."mktgplanningtool.db.functions::GET_CRM_ID"(buy.BUDGET_YEAR, hl1.ACRONYM, hl2.ORGANIZATION_ACRONYM, '', '', '', ''),
                                "MKTG_PLANNING_TOOL"."mktgplanningtool.db.functions::GET_CRM_ID"(buy.BUDGET_YEAR, hl1.ACRONYM, hl2.ORGANIZATION_ACRONYM, hl3.ACRONYM, '', '', ''),
                                "MKTG_PLANNING_TOOL"."mktgplanningtool.db.functions::GET_CRM_ID"(buy.BUDGET_YEAR, hl1.ACRONYM, hl2.ORGANIZATION_ACRONYM, hl3.ACRONYM, hl4.ACRONYM, '', ''),
                                cobj.NAME,
                                csub.NAME,
                                dtype.NAME,
                                mprogram.NAME,
                                hl5.ACTUAL_START_DATE,
                                hl5.ACTUAL_END_DATE,
                                hl5.EMPLOYEE_RESPONSIBLE_USER,
                                CONCAT(us.USER_NAME, CONCAT(' - ', CONCAT(us.FIRST_NAME, CONCAT(' ', us.LAST_NAME)))),
                                hl5.CREATED_DATE_TZ,
                                hl5.EVENT_OWNER,
                                ctry.NAME,
                                hl5.CITY,
                                hl5.EVENT_SUMMARY,
                                hl5.BUSINESS_CASE,
                                rproc.NAME,
                                hl5.NUMBER_OF_PARTICIPANTS,
                                hl5.EXISTING_CUSTOMER_PERCENTAGE,
                                awle.NAME,
                                hl5.AFFILIATED_EVENT_NAME,
                                hl5.EVENT_FOLLOW_UP_ACTIVITIES,
                                hl5.GROSS_COST,
                                hl5.NET_COST,
                                hl5.EXPECTED_REVENUE,
                                hl5.EXPECTED_COFOUNDING,
                                hl5.EVENT_ANSWER_ID;

    out_result_hl6 = SELECT  'HL6' AS HL_LEVEL,
                             hl6.HL5_ID AS HL_PARENT_LEVEL_ID,
                             hl6.HL6_ID AS HL_ID,
                             3 as HIERARCHY_LEVEL_ID,
                             "MKTG_PLANNING_TOOL"."mktgplanningtool.db.functions::GET_CRM_ID"(
                                buy.BUDGET_YEAR,
                                hl1.ACRONYM,
                                hl2.ORGANIZATION_ACRONYM,
                                hl3.ACRONYM,
                                hl4.ACRONYM,
                                hl5.ACRONYM,
                                hl6.ACRONYM) AS CRM_ID,
                             hl6.HL6_CRM_DESCRIPTION AS CRM_DESCRIPTION,
                             hl6_status.DETAIL AS STATUS,
                             "MKTG_PLANNING_TOOL"."mktgplanningtool.db.functions::GET_CRM_ID"(buy.BUDGET_YEAR, hl1.ACRONYM, '', '', '', '', '') AS HL1_PATH,
                             "MKTG_PLANNING_TOOL"."mktgplanningtool.db.functions::GET_CRM_ID"(buy.BUDGET_YEAR, hl1.ACRONYM, hl2.ORGANIZATION_ACRONYM, '', '', '', '') AS HL2_PATH,
                             "MKTG_PLANNING_TOOL"."mktgplanningtool.db.functions::GET_CRM_ID"(buy.BUDGET_YEAR, hl1.ACRONYM, hl2.ORGANIZATION_ACRONYM, hl3.ACRONYM, '', '', '') AS HL3_PATH,
                             "MKTG_PLANNING_TOOL"."mktgplanningtool.db.functions::GET_CRM_ID"(buy.BUDGET_YEAR, hl1.ACRONYM, hl2.ORGANIZATION_ACRONYM, hl3.ACRONYM, hl4.ACRONYM, '', '') AS HL4_PATH,
                             cobj.NAME AS OBJECTIVE_NAME,
                             csub.NAME AS CAMPAIGN_SUB_TYPE_NAME,
                             '' AS DES_TYPE_NAME,
                             mprogram.NAME AS MARKETING_PROGRAM_NAME,
                             TO_NVARCHAR(hl6.ACTUAL_START_DATE, 'MM/DD/YYYY') AS ACTUAL_START_DATE,
                             TO_NVARCHAR(hl6.ACTUAL_END_DATE, 'MM/DD/YYYY') AS ACTUAL_END_DATE,
                             hl6.EMPLOYEE_RESPONSIBLE_USER,
                             CONCAT(us.USER_NAME, CONCAT(' - ', CONCAT(us.FIRST_NAME, CONCAT(' ', us.LAST_NAME)))) AS CREATED_USER,
                             hl6.CREATED_DATE_TZ,
                             hl6.EVENT_OWNER AS EVENT_BUSINESS_OWNER,
                             ctry.NAME AS COUNTRY,
                             hl6.CITY,
                             hl6.EVENT_SUMMARY,
                             hl6.BUSINESS_CASE,
                             STRING_AGG(tgaud.NAME, ',') AS TARGET_AUDIENCE,
                             rproc.NAME AS REGISTRATION_PROCESS,
                             hl6.NUMBER_OF_PARTICIPANTS,
                             hl6.EXISTING_CUSTOMER_PERCENTAGE,
                             awle.NAME AS AFFILIATED_WITH_LARGER_EVENT,
                             hl6.AFFILIATED_EVENT_NAME,
                             hl6.EVENT_FOLLOW_UP_ACTIVITIES,
                             hl6.GROSS_COST,
                             hl6.NET_COST,
                             COALESCE(hl6.EXPECTED_REVENUE, 0) AS EXPECTED_REVENUE,
                             COALESCE(hl6.EXPECTED_COFOUNDING, 0) AS EXPECTED_COFOUNDING,
                             CASE
                                 WHEN hl6.EVENT_ANSWER_ID = 1 THEN 'main tactic'
                                 WHEN hl6.EVENT_ANSWER_ID = 2 THEN 'event within event'
                                 WHEN hl6.EVENT_ANSWER_ID = 3 THEN 'not a specific event'
                                 ELSE 'No Value'
                                 END AS EVENT_ANSWER
                     FROM HL6 hl6
                     INNER JOIN OBJECTIVE cobj
                         ON cobj.OBJECTIVE_ID = hl6.CAMPAIGN_OBJECTIVE_ID
                     INNER JOIN CAMPAIGN_TYPE ctype
                         ON ctype.CAMPAIGN_TYPE_ID = hl6.CAMPAIGN_TYPE_ID
                             AND ctype.SHOW_ADDITIONAL_FIELDS = 1
                     LEFT JOIN CAMPAIGN_SUB_TYPE csub
                         ON csub.CAMPAIGN_SUB_TYPE_ID = hl6.CAMPAIGN_SUBTYPE_ID
                     LEFT JOIN MARKETING_PROGRAM mprogram
                         ON hl6.MARKETING_PROGRAM_ID = mprogram.MARKETING_PROGRAM_ID
                     INNER JOIN USER us
                         ON us.USER_ID = hl6.CREATED_USER_ID
                     LEFT JOIN COUNTRY ctry
                         ON ctry.COUNTRY_ID = hl6.COUNTRY_ID
                     LEFT JOIN HL6_TARGET_AUDIENCE hl6tgaud
                         ON hl6tgaud.HL6_ID = hl6.HL6_ID
                     LEFT JOIN TARGET_AUDIENCE tgaud
                         ON tgaud.TARGET_AUDIENCE_ID = hl6tgaud.TARGET_AUDIENCE_ID
                     LEFT JOIN REGISTRATION_PROCESS rproc
                         ON rproc.REGISTRATION_PROCESS_ID = hl6.REGISTRATION_PROCESS_ID
                     LEFT JOIN AFFILIATED_WITH_LARGER_EVENT awle
                         ON awle.AFFILIATED_WITH_LARGER_EVENT_ID = hl6.AFFILIATED_WITH_LARGER_EVENT_ID
                     INNER JOIN HL6_STATUS_DETAIL hl6_status
                         ON hl6_status.HL6_STATUS_DETAIL_ID = hl6.HL6_STATUS_DETAIL_ID
                     INNER JOIN HL5 hl5
                         ON hl5.HL5_ID = hl6.HL5_ID
                     INNER JOIN HL4 hl4
                         ON hl4.HL4_ID = hl5.HL4_ID
                     INNER JOIN HL3 hl3
                         ON hl3.HL3_ID = hl4.HL3_ID
                             AND (hl3.HL3_ID = IN_HL3_ID OR 0 = IN_HL3_ID)
                     INNER JOIN HL2 hl2
                         ON hl2.HL2_ID = hl3.HL2_ID
                             AND (hl2.HL2_ID = IN_HL2_ID OR 0 = IN_HL2_ID)
                     INNER JOIN HL1 hl1
                         ON hl1.HL1_ID = hl2.HL1_ID
                             AND (hl1.HL1_ID = IN_HL1_ID OR 0 = IN_HL1_ID)
                     INNER JOIN BUDGET_YEAR buy
                         ON buy.BUDGET_YEAR_ID = hl1.BUDGET_YEAR_ID
                            AND (buy.BUDGET_YEAR_ID = IN_BUDGET_YEAR_ID OR 0 = IN_BUDGET_YEAR_ID)
                     LEFT JOIN REGION reg
                         ON reg.REGION_ID = hl1.REGION_ID
                            AND (reg.REGION_ID = IN_REGION_ID OR 0 = IN_REGION_ID)
                     WHERE hl6.ENABLED = 1
                         AND hl6.DELETED = 0
                         AND (reg.REGION_ID = IN_REGION_ID OR 0 = IN_REGION_ID)
                     GROUP BY
                        hl6.HL5_ID,
                        hl6.HL6_ID,
                     	"MKTG_PLANNING_TOOL"."mktgplanningtool.db.functions::GET_CRM_ID"(
                     	    buy.BUDGET_YEAR,
                     	    hl1.ACRONYM,
                     	    hl2.ORGANIZATION_ACRONYM,
                     	    hl3.ACRONYM,
                     	    hl4.ACRONYM,
                     	    hl5.ACRONYM,
                     	    hl6.ACRONYM),
                     	hl6.HL6_CRM_DESCRIPTION,
                     	hl6_status.DETAIL,
                     	"MKTG_PLANNING_TOOL"."mktgplanningtool.db.functions::GET_CRM_ID"(buy.BUDGET_YEAR, hl1.ACRONYM, '', '', '', '', ''),
                        "MKTG_PLANNING_TOOL"."mktgplanningtool.db.functions::GET_CRM_ID"(buy.BUDGET_YEAR, hl1.ACRONYM, hl2.ORGANIZATION_ACRONYM, '', '', '', ''),
                        "MKTG_PLANNING_TOOL"."mktgplanningtool.db.functions::GET_CRM_ID"(buy.BUDGET_YEAR, hl1.ACRONYM, hl2.ORGANIZATION_ACRONYM, hl3.ACRONYM, '', '', ''),
                        "MKTG_PLANNING_TOOL"."mktgplanningtool.db.functions::GET_CRM_ID"(buy.BUDGET_YEAR, hl1.ACRONYM, hl2.ORGANIZATION_ACRONYM, hl3.ACRONYM, hl4.ACRONYM, '', ''),
                        cobj.NAME,
                        csub.NAME,
                        mprogram.NAME,
                        hl6.ACTUAL_START_DATE,
                        hl6.ACTUAL_END_DATE,
                        hl6.EMPLOYEE_RESPONSIBLE_USER,
                        CONCAT(us.USER_NAME, CONCAT(' - ', CONCAT(us.FIRST_NAME, CONCAT(' ', us.LAST_NAME)))),
                        hl6.CREATED_DATE_TZ,
                        hl6.EVENT_OWNER,
                        ctry.NAME,
                        hl6.CITY,
                        hl6.EVENT_SUMMARY,
                        hl6.BUSINESS_CASE,
                        rproc.NAME,
                        hl6.NUMBER_OF_PARTICIPANTS,
                        hl6.EXISTING_CUSTOMER_PERCENTAGE,
                        awle.NAME,
                        hl6.AFFILIATED_EVENT_NAME,
                        hl6.EVENT_FOLLOW_UP_ACTIVITIES,
                        hl6.GROSS_COST,
                        hl6.NET_COST,
                        hl6.EXPECTED_REVENUE,
                        hl6.EXPECTED_COFOUNDING,
                        hl6.EVENT_ANSWER_ID;

    out_result =   (SELECT EVENT_ANSWER AS ORDER00_EVENT_ANSWER,
    					   HL_LEVEL AS ORDER01_HL_LEVEL,
                           HL_PARENT_LEVEL_ID,
                           HL_ID,
                           HIERARCHY_LEVEL_ID,
                           CRM_ID AS ORDER05_CRM_ID,
                           CRM_DESCRIPTION AS ORDER06_CRM_DESCRIPTION,
                           STATUS AS ORDER07_STATUS,
                           HL1_PATH AS ORDER08_HL1_PATH,
                           HL2_PATH AS ORDER09_HL2_PATH,
                           HL3_PATH AS ORDER10_HL3_PATH,
                           HL4_PATH AS ORDER11_HL4_PATH,
                           OBJECTIVE_NAME AS ORDER12_OBJECTIVE_NAME,
                           CAMPAIGN_SUB_TYPE_NAME AS ORDER13_CAMPAIGN_SUB_TYPE_NAME,
                           DES_TYPE_NAME AS ORDER14_DES_TYPE_NAME,
                           MARKETING_PROGRAM_NAME AS ORDER15_MARKETING_PROGRAM_NAME,
                           ACTUAL_START_DATE AS ORDER16_ACTUAL_START_DATE,
                           ACTUAL_END_DATE AS ORDER17_ACTUAL_END_DATE,
                           EMPLOYEE_RESPONSIBLE_USER AS ORDER18_EMPLOYEE_RESPONSIBLE_USER,
                           CREATED_USER AS ORDER19_CREATED_USER,
                           CREATED_DATE_TZ AS ORDER20_CREATED_DATE_TZ,
                           EVENT_BUSINESS_OWNER AS ORDER21_EVENT_BUSINESS_OWNER,
                           COUNTRY AS ORDER22_COUNTRY,
                           CITY AS ORDER23_CITY,
                           EVENT_SUMMARY AS ORDER24_EVENT_SUMMARY,
                           BUSINESS_CASE AS ORDER25_BUSINESS_CASE,
                           TARGET_AUDIENCE AS ORDER26_TARGET_AUDIENCE,
                           REGISTRATION_PROCESS AS ORDER27_REGISTRATION_PROCESS,
                           NUMBER_OF_PARTICIPANTS AS ORDER28_NUMBER_OF_PARTICIPANTS,
                           EXISTING_CUSTOMER_PERCENTAGE AS ORDER29_EXISTING_CUSTOMER_PERCENTAGE,
                           AFFILIATED_WITH_LARGER_EVENT AS ORDER30_AFFILIATED_WITH_LARGER_EVENT,
                           AFFILIATED_EVENT_NAME AS ORDER31_AFFILIATED_EVENT_NAME,
                           EVENT_FOLLOW_UP_ACTIVITIES AS ORDER32_EVENT_FOLLOW_UP_ACTIVITIES,
                           GROSS_COST AS ORDER33_GROSS_COST,
                           NET_COST AS ORDER34_NET_COST,
                           EXPECTED_REVENUE AS ORDER35_EXPECTED_REVENUE,
                           EXPECTED_COFOUNDING AS ORDER36_EXPECTED_COFOUNDING
                   FROM :out_result_hl5)

                   UNION

                   (SELECT EVENT_ANSWER AS ORDER00_EVENT_ANSWER,
                   		   HL_LEVEL AS ORDER01_HL_LEVEL,
                           HL_PARENT_LEVEL_ID,
                           HL_ID,
                           HIERARCHY_LEVEL_ID,
                           CRM_ID AS ORDER05_CRM_ID,
                           CRM_DESCRIPTION AS ORDER06_CRM_DESCRIPTION,
                           STATUS AS ORDER07_STATUS,
                           HL1_PATH AS ORDER08_HL1_PATH,
                           HL2_PATH AS ORDER09_HL2_PATH,
                           HL3_PATH AS ORDER10_HL3_PATH,
                           HL4_PATH AS ORDER11_HL4_PATH,
                           OBJECTIVE_NAME AS ORDER12_OBJECTIVE_NAME,
                           CAMPAIGN_SUB_TYPE_NAME AS ORDER13_CAMPAIGN_SUB_TYPE_NAME,
                           DES_TYPE_NAME AS ORDER14_DES_TYPE_NAME,
                           MARKETING_PROGRAM_NAME AS ORDER15_MARKETING_PROGRAM_NAME,
                           ACTUAL_START_DATE AS ORDER16_ACTUAL_START_DATE,
                           ACTUAL_END_DATE AS ORDER17_ACTUAL_END_DATE,
                           EMPLOYEE_RESPONSIBLE_USER AS ORDER18_EMPLOYEE_RESPONSIBLE_USER,
                           CREATED_USER AS ORDER19_CREATED_USER,
                           CREATED_DATE_TZ AS ORDER20_CREATED_DATE_TZ,
                           EVENT_BUSINESS_OWNER AS ORDER21_EVENT_BUSINESS_OWNER,
                           COUNTRY AS ORDER22_COUNTRY,
                           CITY AS ORDER23_CITY,
                           EVENT_SUMMARY AS ORDER24_EVENT_SUMMARY,
                           BUSINESS_CASE AS ORDER25_BUSINESS_CASE,
                           TARGET_AUDIENCE AS ORDER26_TARGET_AUDIENCE,
                           REGISTRATION_PROCESS AS ORDER27_REGISTRATION_PROCESS,
                           NUMBER_OF_PARTICIPANTS AS ORDER28_NUMBER_OF_PARTICIPANTS,
                           EXISTING_CUSTOMER_PERCENTAGE AS ORDER29_EXISTING_CUSTOMER_PERCENTAGE,
                           AFFILIATED_WITH_LARGER_EVENT AS ORDER30_AFFILIATED_WITH_LARGER_EVENT,
                           AFFILIATED_EVENT_NAME AS ORDER31_AFFILIATED_EVENT_NAME,
                           EVENT_FOLLOW_UP_ACTIVITIES AS ORDER32_EVENT_FOLLOW_UP_ACTIVITIES,
                           GROSS_COST AS ORDER33_GROSS_COST,
                           NET_COST AS ORDER34_NET_COST,
                           EXPECTED_REVENUE AS ORDER35_EXPECTED_REVENUE,
                           EXPECTED_COFOUNDING AS ORDER36_EXPECTED_COFOUNDING
                   FROM :out_result_hl6);

	out_hl5_categories = SELECT hl5.HL5_ID AS HL_ID,
	                            acol.ALLOCATION_CATEGORY_OPTION_LEVEL_ID,
	                            acol.HIERARCHY_LEVEL_ID,
	                            hl5_co.AMOUNT
	                      FROM HL5_CATEGORY_OPTION hl5_co
	                      INNER JOIN ALLOCATION_CATEGORY_OPTION_LEVEL acol
	                        ON acol.ALLOCATION_CATEGORY_OPTION_LEVEL_ID = hl5_co.ALLOCATION_CATEGORY_OPTION_LEVEL_ID
	                            AND acol.ENABLED = 1
                                AND acol.DELETED = 0
	                      INNER JOIN HL5 hl5
	                        ON hl5.HL5_ID = hl5_co.HL5_ID
	                      INNER JOIN HL4 hl4
                            ON hl4.HL4_ID = hl5.HL4_ID
                          INNER JOIN HL3 hl3
                            ON hl3.HL3_ID = hl4.HL3_ID
                                AND (hl3.HL3_ID = IN_HL3_ID OR 0 = IN_HL3_ID)
                          INNER JOIN HL2 hl2
                            ON hl2.HL2_ID = hl3.HL2_ID
                                AND (hl2.HL2_ID = IN_HL2_ID OR 0 = IN_HL2_ID)
                          INNER JOIN HL1 hl1
                            ON hl1.HL1_ID = hl2.HL1_ID
                                AND (hl1.HL1_ID = IN_HL1_ID OR 0 = IN_HL1_ID)
                          INNER JOIN BUDGET_YEAR buy
                            ON buy.BUDGET_YEAR_ID = hl1.BUDGET_YEAR_ID
                                AND (buy.BUDGET_YEAR_ID = IN_BUDGET_YEAR_ID OR 0 = IN_BUDGET_YEAR_ID)
	                      INNER JOIN CAMPAIGN_TYPE ctype -- To use only Events
	                        ON hl5.CAMPAIGN_TYPE_ID = ctype.CAMPAIGN_TYPE_ID
	                            AND ctype.SHOW_ADDITIONAL_FIELDS = 1
                          LEFT JOIN REGION reg
                            ON reg.REGION_ID = hl1.REGION_ID
                                AND (reg.REGION_ID = IN_REGION_ID OR 0 = IN_REGION_ID)
	                      WHERE hl5.ENABLED = 1
	                        AND hl5.DELETED = 0
	                        AND (reg.REGION_ID = IN_REGION_ID OR 0 = IN_REGION_ID);

    out_hl6_categories = SELECT hl6.HL6_ID AS HL_ID,
	                            acol.ALLOCATION_CATEGORY_OPTION_LEVEL_ID,
	                            acol.HIERARCHY_LEVEL_ID,
	                            hl6_co.AMOUNT
	                      FROM HL6_CATEGORY_OPTION hl6_co
	                      INNER JOIN ALLOCATION_CATEGORY_OPTION_LEVEL acol
	                        ON acol.ALLOCATION_CATEGORY_OPTION_LEVEL_ID = hl6_co.ALLOCATION_CATEGORY_OPTION_LEVEL_ID
	                            AND acol.ENABLED = 1
                                AND acol.DELETED = 0
	                      INNER JOIN HL6 hl6
	                        ON hl6.HL6_ID = hl6_co.HL6_ID
	                      INNER JOIN HL5 hl5
                            ON hl5.HL5_ID = hl6.HL5_ID
                          INNER JOIN HL4 hl4
                            ON hl4.HL4_ID = hl5.HL4_ID
                          INNER JOIN HL3 hl3
                            ON hl3.HL3_ID = hl4.HL3_ID
                                AND (hl3.HL3_ID = IN_HL3_ID OR 0 = IN_HL3_ID)
                          INNER JOIN HL2 hl2
                            ON hl2.HL2_ID = hl3.HL2_ID
                                AND (hl2.HL2_ID = IN_HL2_ID OR 0 = IN_HL2_ID)
                          INNER JOIN HL1 hl1
                            ON hl1.HL1_ID = hl2.HL1_ID
                                AND (hl1.HL1_ID = IN_HL1_ID OR 0 = IN_HL1_ID)
                           INNER JOIN BUDGET_YEAR buy
                            ON buy.BUDGET_YEAR_ID = hl1.BUDGET_YEAR_ID
                                AND (buy.BUDGET_YEAR_ID = IN_BUDGET_YEAR_ID OR 0 = IN_BUDGET_YEAR_ID)
	                      INNER JOIN CAMPAIGN_TYPE ctype -- To use only Events
                            ON hl6.CAMPAIGN_TYPE_ID = ctype.CAMPAIGN_TYPE_ID
	                            AND ctype.SHOW_ADDITIONAL_FIELDS = 1
                          LEFT JOIN REGION reg
                            ON reg.REGION_ID = hl1.REGION_ID
                                AND (reg.REGION_ID = IN_REGION_ID OR 0 = IN_REGION_ID)
	                      WHERE hl6.ENABLED = 1
	                        AND hl6.DELETED = 0
	                        AND (reg.REGION_ID = IN_REGION_ID OR 0 = IN_REGION_ID);

	out_level_categories = (SELECT * FROM :out_hl5_categories)
                            UNION
                           (SELECT * FROM :out_hl6_categories);

	out_lob_category = select  hl_acol.HIERARCHY_LEVEL_ID,
	                           hl_acol.HL_ID,
                               cat.ALLOCATION_CATEGORY_ID,
                               cat.NAME as CATEGORY_NAME,
                               opt.ALLOCATION_OPTION_ID,
                               opt.NAME AS OPTION_NAME,
                               hl_acol.AMOUNT,
                               acol.ALLOCATION_CATEGORY_OPTION_LEVEL_ID
                     from ALLOCATION_CATEGORY_OPTION_LEVEL acol
                     	INNER JOIN :out_level_categories hl_acol
                     	    ON hl_acol.ALLOCATION_CATEGORY_OPTION_LEVEL_ID = acol.ALLOCATION_CATEGORY_OPTION_LEVEL_ID
                     	INNER JOIN ALLOCATION_CATEGORY cat
                     	    ON acol.ALLOCATION_CATEGORY_ID = cat.ALLOCATION_CATEGORY_ID
                     	INNER JOIN ALLOCATION_OPTION opt
                     	    ON acol.ALLOCATION_OPTION_ID = opt.ALLOCATION_OPTION_ID
                     WHERE acol.allocation_category_id = 5 --Line of Business
                         AND acol.ENABLED = 1
                         AND acol.DELETED = 0;

	out_segment_category = select  hl_acol.HIERARCHY_LEVEL_ID,
                                   hl_acol.HL_ID,
                                   cat.ALLOCATION_CATEGORY_ID,
                                   cat.NAME as CATEGORY_NAME,
                                   opt.ALLOCATION_OPTION_ID,
                                   opt.NAME AS OPTION_NAME,
                                   hl_acol.AMOUNT,
                                   acol.ALLOCATION_CATEGORY_OPTION_LEVEL_ID
                         from ALLOCATION_CATEGORY_OPTION_LEVEL acol
                            INNER JOIN :out_level_categories hl_acol
                                ON hl_acol.ALLOCATION_CATEGORY_OPTION_LEVEL_ID = acol.ALLOCATION_CATEGORY_OPTION_LEVEL_ID
                            INNER JOIN ALLOCATION_CATEGORY cat
                                ON acol.ALLOCATION_CATEGORY_ID = cat.ALLOCATION_CATEGORY_ID
                            INNER JOIN ALLOCATION_OPTION opt
                                ON acol.ALLOCATION_OPTION_ID = opt.ALLOCATION_OPTION_ID
                         where acol.allocation_category_id = 9 --Marketing Segment
                            AND acol.ENABLED = 1
                            AND acol.DELETED = 0;
END;
